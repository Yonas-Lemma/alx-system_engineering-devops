#!/bin/bash

# Define symbol strings for each base
water_symbols="ewwatratewa"
stir_symbols="ti.itirtrtr"
bestchol_symbols="shtbeolhc"

# Map symbols to digits (associative arrays)
declare -A water_map
declare -A stir_map
declare -A bestchol_map

# Initialize mappings
for i in "${!water_symbols}"; do
  water_map["${water_symbols:i:1}"]=$i
done

for i in "${!stir_symbols}"; do
  stir_map["${stir_symbols:i:1}"]=$i
done

for i in "${!bestchol_symbols}"; do
  bestchol_map["${bestchol_symbols:i:1}"]=$i
done

# Convert from custom base to decimal
function to_decimal() {
  local str="$1"
  local base="$2"
  local -n map=$3
  local len=${#str}
  local dec=0
  for (( i=0; i<len; i++ )); do
    c=${str:i:1}
    digit=${map[$c]}
    dec=$(( dec * ${#base} + digit ))
  done
  echo "$dec"
}

# Convert from decimal to custom base
function from_decimal() {
  local num="$1"
  local base="$2"
  local -a symbols=($base)
  local result=""
  if [ "$num" -eq 0 ]; then
    echo "${symbols[0]}"
    return
  fi
  while [ "$num" -gt 0 ]; do
    r=$(( num % ${#symbols[@]} ))
    result="${symbols[r]}$result"
    num=$(( num / ${#symbols[@]} ))
  done
  echo "$result"
}

# Read environment variables
water="$WATER"
stir="$STIR"

# Convert to decimal
water_dec=$(to_decimal "$water" "$water_symbols" water_map)
stir_dec=$(to_decimal "$stir" "$stir_symbols" stir_map)

# Sum
sum=$(( water_dec + stir_dec ))

# Convert sum to bestchol
result=$(from_decimal "$sum" "$bestchol_symbols")

echo "$result"

